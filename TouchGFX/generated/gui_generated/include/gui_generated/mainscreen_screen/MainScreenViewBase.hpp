/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box Background;
    touchgfx::Container Content;
    touchgfx::Circle TempIndicator;
    touchgfx::PainterRGB565 TempIndicatorPainter;
    touchgfx::Circle HumIndicator;
    touchgfx::PainterRGB565 HumIndicatorPainter;
    touchgfx::Circle UVIndicator;
    touchgfx::PainterRGB565 UVIndicatorPainter;
    touchgfx::Container Values;
    touchgfx::TextArea TempTitle;
    touchgfx::TextArea HumTitle;
    touchgfx::TextArea UVTitle;
    touchgfx::TextAreaWithOneWildcard TempValue;
    touchgfx::TextAreaWithOneWildcard HumValue;
    touchgfx::TextAreaWithOneWildcard UVValue;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEMPVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TempValueBuffer[TEMPVALUE_SIZE];
    static const uint16_t HUMVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HumValueBuffer[HUMVALUE_SIZE];
    static const uint16_t UVVALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar UVValueBuffer[UVVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAINSCREENVIEWBASE_HPP
